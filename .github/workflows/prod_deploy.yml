name: production deploy
on: [workflow_dispatch]
jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [13.x]

        steps:
            - name: git pull
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PRODHOST }}
                username: d8b-common
                passphrase: ${{ secrets.PRODDEPLPASS }}
                key: ${{ secrets.PRODDEPLKEY }}
                script: |
                    cd ${{ secrets.BACKPRODAPPDIR }}
                    git pull    

            - name: build image
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PRODHOST }}
                username: d8b-deploy
                passphrase: ${{ secrets.PRODDEPLPASS }}
                key: ${{ secrets.PRODDEPLKEY }}
                script: docker build --tag ${{ secrets.BACKIMAGE }} -f ${{ secrets.DOCKERDIR }}/d8b-back-python/Dockerfile ${{ secrets.BACKPRODAPPDIR }}

            - name: npm install
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PRODHOST }}
                username: d8b-deploy
                passphrase: ${{ secrets.PRODDEPLPASS }}
                key: ${{ secrets.PRODDEPLKEY }}
                script: docker-compose -f ${{ secrets.DOCKERDIR }}/d8b-back-npm-cli.yml run --rm d8b-back-npm-cli npm install
                                       
            - name: run migrates
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PRODHOST }}
                username: d8b-deploy
                passphrase: ${{ secrets.PRODDEPLPASS }}
                key: ${{ secrets.PRODDEPLKEY }}
                script: docker-compose -f ${{ secrets.DOCKERDIR }}/d8b-back-django-cli.yml run --rm d8b-back-django-cli ./manage.py migrate --no-input

            - name: build front
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PRODHOST }}
                username: d8b-deploy
                passphrase: ${{ secrets.PRODDEPLPASS }}
                key: ${{ secrets.PRODDEPLKEY }}
                script: docker-compose -f ${{ secrets.DOCKERDIR }}/d8b-back-django-cli.yml run --rm d8b-back-django-cli ./manage.py collectstatic --no-input

            - name: generate messages
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PRODHOST }}
                username: d8b-deploy
                passphrase: ${{ secrets.PRODDEPLPASS }}
                key: ${{ secrets.PRODDEPLKEY }}
                script: docker-compose -f ${{ secrets.DOCKERDIR }}/d8b-back-django-cli.yml run --rm d8b-back-django-cli ./manage.py compilemessages -f

            - name: stop uwsgi container
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PRODHOST }}
                username: d8b-deploy
                passphrase: ${{ secrets.PRODDEPLPASS }}
                key: ${{ secrets.PRODDEPLKEY }}
                script: docker-compose -f ${{ secrets.DOCKERDIR }}/d8b-back-main-composer.yml stop d8b-back-uwsgi

            - name: remove uwsgi container
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PRODHOST }}
                username: d8b-deploy
                passphrase: ${{ secrets.PRODDEPLPASS }}
                key: ${{ secrets.PRODDEPLKEY }}
                script: docker-compose -f ${{ secrets.DOCKERDIR }}/d8b-back-main-composer.yml rm -f d8b-back-uwsgi

            - name: start uwsgi container
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PRODHOST }}
                username: d8b-deploy
                passphrase: ${{ secrets.PRODDEPLPASS }}
                key: ${{ secrets.PRODDEPLKEY }}
                script: docker-compose -f ${{ secrets.DOCKERDIR }}/d8b-back-main-composer.yml up -d d8b-back-uwsgi

            - name: stop celery beat container
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PRODHOST }}
                username: d8b-deploy
                passphrase: ${{ secrets.PRODDEPLPASS }}
                key: ${{ secrets.PRODDEPLKEY }}
                script: docker-compose -f ${{ secrets.DOCKERDIR }}/d8b-back-main-composer.yml stop d8b-back-celery-beat

            - name: remove celery beat container
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PRODHOST }}
                username: d8b-deploy
                passphrase: ${{ secrets.PRODDEPLPASS }}
                key: ${{ secrets.PRODDEPLKEY }}
                script: docker-compose -f ${{ secrets.DOCKERDIR }}/d8b-back-main-composer.yml rm -f d8b-back-celery-beat

            - name: start celery beat container
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PRODHOST }}
                username: d8b-deploy
                passphrase: ${{ secrets.PRODDEPLPASS }}
                key: ${{ secrets.PRODDEPLKEY }}
                script: docker-compose -f ${{ secrets.DOCKERDIR }}/d8b-back-main-composer.yml up -d d8b-back-celery-beat

            - name: stop celery default worker container
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PRODHOST }}
                username: d8b-deploy
                passphrase: ${{ secrets.PRODDEPLPASS }}
                key: ${{ secrets.PRODDEPLKEY }}
                script: docker-compose -f ${{ secrets.DOCKERDIR }}/d8b-back-main-composer.yml stop d8b-back-celery-default

            - name: remove celery default worker container
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PRODHOST }}
                username: d8b-deploy
                passphrase: ${{ secrets.PRODDEPLPASS }}
                key: ${{ secrets.PRODDEPLKEY }}
                script: docker-compose -f ${{ secrets.DOCKERDIR }}/d8b-back-main-composer.yml rm -f d8b-back-celery-default 

            - name: start celery default worker container
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PRODHOST }}
                username: d8b-deploy
                passphrase: ${{ secrets.PRODDEPLPASS }}
                key: ${{ secrets.PRODDEPLKEY }}
                script: docker-compose -f ${{ secrets.DOCKERDIR }}/d8b-back-main-composer.yml up -d d8b-back-celery-default

            - name: send email if deploy is successful
              uses: dawidd6/action-send-mail@v2
              if: ${{ success() }}
              with:
                server_address: smtp.yandex.ru
                server_port: 465
                username: ${{secrets.MAIL_USERNAME}}
                password: ${{secrets.MAIL_PASSWORD}}
                subject: Success - prod deploy of backend - ${{github.repository}}
                body: Prod deploy of backend(${{github.repository}}) completed successfully
                to: ${{secrets.PD_SUCCESS_MAIL_RECEPIENTS}}
                from: Github actions
                content_type: text/html

            - name: send email if deploy is failure
              uses: dawidd6/action-send-mail@v2
              if: ${{ failure() }}
              with:
                server_address: smtp.yandex.ru
                server_port: 465
                username: ${{secrets.MAIL_USERNAME}}
                password: ${{secrets.MAIL_PASSWORD}}
                subject: Failure - prod deploy of backend ${{github.repository}}
                body: Prod deploy of backend(${{github.repository}}) is failure
                to: ${{secrets.PD_FAILURE_MAIL_RECEPIENTS}}
                from: Github actions
                content_type: text/html