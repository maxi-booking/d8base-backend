name: tests

on: [push,workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
      memcached:
        image: memcached

    steps:
      - uses: actions/checkout@v1
      - uses: huaxk/postgis-action@v1
        with:
          postgresql version: '11'
          postgresql password: 'postgres'
          postgresql user: 'postgres'
          postgresql db: 'd8b'
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install environments
        run: |
            ### sudo rm -f /etc/apt/sources.list.d/dotnetdev.list /etc/apt/sources.list.d/microsoft-prod.list
            sudo apt-get update
            sudo apt-get install -y gettext sqlite3 libsqlite3-dev libpq-dev python3.8-dev python3.7-dev binutils libproj-dev gdal-bin

      - name: Copy configs
        run: |
            cp -n d8b/settings/.env_dist d8b/settings/.env
            cp -n d8b/settings/.env_test_dist d8b/settings/.env_test

      - name: Install dependencies
        run: |
          pip install -e .

      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt

      - name: Run the database migration
        run: |
          python manage.py migrate --no-input
          python manage.py compilemessages

      - name: Test the app
        run: |
          tox

      - name: Codecov
        run: |
          codecov --token=${{ secrets.CODECOV_TOKEN }}

      - name: git pull
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGEHOST }}
          username: mb
          passphrase: ${{ secrets.STAGEDEPLPASS }}
          key: ${{ secrets.STAGEDEPLKEY }}
          script: |
              cd ${{ secrets.BACKDIR }}
              git pull
              
      - name: Install nmp dependencies
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGEHOST }}
          username: mb
          passphrase: ${{ secrets.STAGEDEPLPASS }}
          key: ${{ secrets.STAGEDEPLKEY }}
          script: docker-compose -f /var/maxibooking/d8b-back-npm-install.yml up

      - name: Rebuild container of the d8b-back-django-cli service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGEHOST }}
          username: mb
          passphrase: ${{ secrets.STAGEDEPLPASS }}
          key: ${{ secrets.STAGEDEPLKEY }}
          script: docker-compose -f /var/maxibooking/d8b-back-django-cli.yml build --no-cache d8b-back-django-cli

      - name: Run migrations
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGEHOST }}
          username: mb
          passphrase: ${{ secrets.STAGEDEPLPASS }}
          key: ${{ secrets.STAGEDEPLKEY }}
          script: docker-compose -f /var/maxibooking/d8b-back-django-cli.yml run --rm d8b-back-django-cli ./manage.py migrate --no-input

      - name: Static generate
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGEHOST }}
          username: mb
          passphrase: ${{ secrets.STAGEDEPLPASS }}
          key: ${{ secrets.STAGEDEPLKEY }}
          script: docker-compose -f /var/maxibooking/d8b-back-django-cli.yml run --rm d8b-back-django-cli ./manage.py collectstatic --no-input

      - name: Messages generate
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGEHOST }}
          username: mb
          passphrase: ${{ secrets.STAGEDEPLPASS }}
          key: ${{ secrets.STAGEDEPLKEY }}
          script: docker-compose -f /var/maxibooking/d8b-back-django-cli.yml run --rm d8b-back-django-cli ./manage.py compilemessages -f

      - name: Stop d8b-back-web container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGEHOST }}
          username: mb
          passphrase: ${{ secrets.STAGEDEPLPASS }}
          key: ${{ secrets.STAGEDEPLKEY }}
          script: docker container stop d8b-back-web

      - name: Remove d8b-back-web container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGEHOST }}
          username: mb
          passphrase: ${{ secrets.STAGEDEPLPASS }}
          key: ${{ secrets.STAGEDEPLKEY }}
          script: docker container rm d8b-back-web

      - name: Rebuild d8b-back-web container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGEHOST }}
          username: mb
          passphrase: ${{ secrets.STAGEDEPLPASS }}
          key: ${{ secrets.STAGEDEPLKEY }}
          script: docker-compose -f /var/maxibooking/d8b-back-main-composer.yml build --no-cache d8b-back-web

      - name: Start d8b-back-web container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGEHOST }}
          username: mb
          passphrase: ${{ secrets.STAGEDEPLPASS }}
          key: ${{ secrets.STAGEDEPLKEY }}
          script: docker-compose -f /var/maxibooking/d8b-back-main-composer.yml up -d d8b-back-web

      - name: Send email if tests or deploy are failure
        uses: dawidd6/action-send-mail@v2
        if: ${{ failure() }}
        with:
          server_address: smtp.yandex.ru
          server_port: 465
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: Failure - ${{github.repository}} - tests or deploy on push 
          body: Tests or deploy on push are failure - ${{github.repository}}
          to: ${{secrets.FAIL_MAIL_RECEPIENTS}}
          from: Github actions
          content_type: text/html
              
      - name: Send email if tests and deploy are successful
        uses: dawidd6/action-send-mail@v2
        if: ${{ success() }}
        with:
          server_address: smtp.yandex.ru
          server_port: 465
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: Success - ${{github.repository}} - tests and deploy on push
          body: Tests and deploy on push are successful - ${{github.repository}}
          to: ${{secrets.SUCCESS_MAIL_RECEPIENTS}}
          from: Github actions
          content_type: text/html